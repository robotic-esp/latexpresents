%%%%%%%%%%%% CLASS OPTIONS %%%%%%%%%%%%
% Setup
\RequirePackage{kvoptions}% For defining package options as key-value pairs
\SetupKeyvalOptions%
{%
    family = espbeamer,%
    prefix = espbeamer@%
}%

% Colour theme
\DeclareBoolOption[false]{debug}% espbeamer@debug
\DeclareBoolOption[false]{dark}% espbeamer@dark
\DeclareComplementaryOption{light}{dark}%
%%Which multimedia package to use
\DeclareBoolOption[false]{adobe}% espbeamer@adobe
\DeclareComplementaryOption{pdfpc}{adobe}%
\ProcessKeyvalOptions*%
%%%%%%%%%%%% END CLASS OPTIONS %%%%%%%%%%%%

%%%%%%%%%%%% PACKAGES %%%%%%%%%%%%
\RequirePackage{amssymb,amsmath,amscd,amsthm}% Math is good
\RequirePackage{tikz}% Part of Beamer, but seems like a good idea when specifying libraries
\usetikzlibrary{positioning}%
\RequirePackage{calc}% For adding lengths
\RequirePackage{xparse}% For NewDocumentCommand which allows multiple optional arguments with defaults
\RequirePackage{xkeyval}% For defining macro options as key-value pairs. Extends the base keyval package.
\RequirePackage{xcolor}% You know, for colours.
\RequirePackage{fp}% For fixed point math
\RequirePackage[absolute,overlay]{textpos}% For absolutely positioned text boxes (titlepage)
\usepackage{microtype}% Make pdflatex look more good.
\usepackage{datetime2}% Better date formatting, ISO by default.
\RequirePackage{contour}% For a custom definition of \underline that looks better.
\RequirePackage[normalem]{ulem}% For a custom definition of \underline that looks better, with option to not redefine \emph.
\RequirePackage{printlen}% \printlength
\uselengthunit{pt}
%For media (depending on optional flag)
\ifespbeamer@adobe%
    \RequirePackage{media9}%
\else%
    \RequirePackage{multimedia}%
\fi%

\textblockrulecolour{TEXT}%
%%%%%%%%%%%% END PACKAGES %%%%%%%%%%%%



\institute{Estimation, Search, and Planning (ESP) Research Group\\ Oxford Robotics Institute (ORI)\\ University of Oxford}



%%%%%%%%%%%% DIMENSIONS %%%%%%%%%%%%
%%% Publically available positions and lengths (Set by ESP) %%%
\newlength{\contentposx}% The starting x-position of all content in a frame.
\newlength{\contentposy}% The starting y-position of all content in a frame.
\newlength{\contentwidth}% The total width for all content in a frame.
\newlength{\contentheight}% The total height for all content in a frame.
\newlength{\elementposx}% The starting x-position of a frame element (e.g., column).
\newlength{\elementposy}% The starting y-position of a frame element (e.g., column).
\newlength{\elementwidth}% The width of a frame element (e.g., column).
\newlength{\elementheight}% The height of a frame element (e.g., column).

%%% Internal Parameters %%%
% Slide sapcing
\newlength{\espbeamer@border@left}%
\setlength{\espbeamer@border@left}{8pt}%
\newlength{\espbeamer@border@right}%
\setlength{\espbeamer@border@right}{8pt}%
\newlength{\espbeamer@border@top}%
\setlength{\espbeamer@border@top}{8pt}%
\newlength{\espbeamer@border@bottom}%
\setlength{\espbeamer@border@bottom}{8pt}%
\newlength{\espbeamer@gutter@column}%
\setlength{\espbeamer@gutter@column}{6pt}%
\newlength{\espbeamer@gutter@row}%
\setlength{\espbeamer@gutter@row}{\espbeamer@gutter@column}%
\newlength{\espbeamer@frametitle@sep}% The space below the frame title and the content. Untested as to whether the class works when different than the Beamer default.
\setlength{\espbeamer@frametitle@sep}{8.5pt}% Beamer default found experimentally to 8.5pt.
% Title logos
\newlength{\espbeamer@titlelogo@maxheight}%
\setlength{\espbeamer@titlelogo@maxheight}{56pt}%
\newlength{\espbeamer@titlelogo@sep}%
\setlength{\espbeamer@titlelogo@sep}{8pt}% This may not be the exact logo separation used as title logos are scaled as a group if they are wider than the title page
% Footer logos
\newlength{\espbeamer@footlogo@height}%
\setlength{\espbeamer@footlogo@height}{28pt}%
\newlength{\espbeamer@footlogo@sep}%
\setlength{\espbeamer@footlogo@sep}{4pt}%
% Biographical photos
\newlength{\espbeamer@bio@height}% Set from \espbeamer@topmatter@height
\newlength{\espbeamer@bio@sep}%
\setlength{\espbeamer@bio@sep}{1.5pt}%

%%%% Fixes %%%
%\setlength{\abovecaptionskip}{0pt}%
%\setlength{\belowcaptionskip}{0pt}%

%%% Internally calculated lengths from Beamer %%%
\newlength{\espbeamer@titlelogo@maxwidth}% Height of the frame title block
\newlength{\espbeamer@frametitle@height}% Height of the frame title block
\newlength{\espbeamer@topmatter@height}% Height of everything above content
\newlength{\espbeamer@bottommatter@height}% Height of everything below content

%%% Manually specified lengths %%%
\newlength{\espbeamer@beamer@heightdiff}% This is the difference between \pageheight and \textheight regardless of aspect ratio.
\setlength{\espbeamer@beamer@heightdiff}{4pt}% Found experimentally. Documented without expected use.
%%%%%%%%%%%% END DIMENSIONS %%%%%%%%%%%%%%%%%% 



%%%%%%%%%%%% BEAMER %%%%%%%%%%%%%%%%%% 
% Pass options to Beamer
\setbeamersize{text margin left=\espbeamer@border@left, text margin right=\espbeamer@border@right}%

% Beamer specific divisions for elements of a theme. In theory, any entry can appear anywhere
\usecolortheme{ESP}%
\usefonttheme{ESP}%
\useinnertheme{ESP}%
\useoutertheme{ESP}%

% Patch Beamer to always call the frametitle template even if no title is given
\patchcmd{\endbeamer@frameslide}{\ifx\beamer@frametitle\@empty}{\iffalse}{}{\errmessage{failed to patch}}%

% Calculate lengths from Beamer theme settings
\settototalheight{\espbeamer@frametitle@height}{\setframetitle}%
\setlength{\espbeamer@topmatter@height}%
{%
    \espbeamer@border@top + \espbeamer@frametitle@height + \espbeamer@frametitle@sep
}%
\setlength{\espbeamer@bottommatter@height}%
{%
    \espbeamer@footlogo@sep + \espbeamer@footlogo@height + \espbeamer@border@bottom
}%
\setlength{\espbeamer@bio@height}%
{%
    \espbeamer@topmatter@height
    - \espbeamer@border@top
    %bio photo
    - \espbeamer@bio@sep%
}%
%%%%%%%%%%%% END BEAMER %%%%%%%%%%%%%%%%%% 



%%%%%%%%%%%% DOCUMENT INIT %%%%%%%%%%%%
% Package initialization run at \begin{document}
\AtBeginDocument%
{%
    % Load logos for theme
    \ifespbeamer@dark%
        \addlogo[logos/Oxford_rect_rev_v300px.png]{logos/Oxford_rev_300px.png}%
        \addlogo{logos/ORI_rev_v300px.png}%
        \addlogo{logos/ESP_rev_v300px.png}%
    \else%
        \addlogo[logos/Oxford_rect_v300px.png]{logos/Oxford_300px.png}%
        \addlogo{logos/ORI_v300px.png}%
        \addlogo{logos/ESP_v300px.png}%
    \fi%
    % Save as default
    \savelogos{}%
}
%%%%%%%%%%%% END DOCUMENT INIT %%%%%%%%%%%%



%%%%%%%%%%%% FRAME ENVIRONMENTS %%%%%%%%%%%%
%A frame for full screen media.
\newenvironment{fullframe}%
{%
    \setbeamertemplate{background canvas}{\color{black}\vrule width\paperwidth height\paperheight}%
    \setbeamertemplate{headline}{}%
    \setbeamertemplate{footline}{}%
    \setbeamertemplate{sidebar left}{}%
    \setbeamertemplate{sidebar right}{}%
    \setbeamertemplate{frametitle}{}%
    \setlength{\contentposx}{0pt}%
    \setlength{\contentposy}{0pt}%
    \setlength{\contentwidth}{\paperwidth}%
    \setlength{\contentheight}{\paperheight}%
    \setlength{\elementposx}{\contentposx}%
    \setlength{\elementposy}{\contentposy}%
    \setlength{\elementwidth}{\contentwidth}%
    \setlength{\elementheight}{\contentheight}%
    \begin{frame}%
}%
{%
    \end{frame}%
}%
%%%%%%%%%%%% END FRAME ENVIRONMENTS %%%%%%%%%%%%



%%%%%%%%%%%% HIGH-LEVEL FRAME LAYOUTS %%%%%%%%%%%%
%%% ONE-COLUMN LAYOUTS %%%
\newcommand{\onecolumnfull}[1]{\threecolumnlayout{1.0}{0}{#1}{}{}}%
\NewDocumentCommand{\imagecenter}{O{} O{} m}{\threecolumnlayout{1.0}{0}{\image[#1][#2]{#3}}{}{}}% Usage: see \image
\NewDocumentCommand{\pdfpagecenter}{O{} O{} m m}{\threecolumnlayout{1.0}{0}{\pdfpage[#1][#2]{#3}{#4}}{}{}}% Usage: see \image
\NewDocumentCommand{\videocenter}{O{} O{noprogress,autostart,loop} m m}{\threecolumnlayout{1.0}{0}{\video[#1][#2]{#3}{#4}}{}{}}% Usage: see \video
\NewDocumentCommand{\envleft}{O{itemize} +m}{\threecolumnlayout{1.0}{0}{\begin{#1}#2\end{#1}}{}{}}% Usage: [environment]{environment content}

%%% TWO-COLUMN LAYOUTS %%%
\newcommand{\twocolumneven}[2]{\threecolumnlayout{0.5}{0.5}{#1}{#2}{}}%
\newcommand{\twocolumnbigleft}[2]{\threecolumnlayout{0.6666}{0.3333}{#1}{#2}{}}%
\newcommand{\twocolumnbigright}[2]{\threecolumnlayout{0.3333}{0.6666}{#1}{#2}{}}%
\NewDocumentCommand{\envleftboxright}{O{itemize} +m m}{\threecolumnlayout{0.5}{0.5}{\begin{#1}#2\end{#1}}{#3}{}{}}% Usage: [environment]{environment content}{media content}
\NewDocumentCommand{\boxleftenvright}{m O{itemize} +m}{\threecolumnlayout{0.5}{0.5}{#1}{\begin{#2}#3\end{#2}}{}{}}% Usage: {media content}[environment]{environment content}
\NewDocumentCommand{\envleftright}{O{itemize} +m O{itemize} +m}{\threecolumnlayout{0.5}{0.5}{\begin{#1}#2\end{#1}}{\begin{#3}#4\end{#3}}{}{}}% Usage: [environment]{environment content}[environment]{environment content}
%%% END TWO-COLUMN LAYOUTS %%%

%%% THREE-COLUMN LAYOUTS %%%
\newcommand{\threecolumneven}[3]{\threecolumnlayout{0.3333}{0.3333}{#1}{#2}{#3}}%
\newcommand{\threecolumnbigleft}[3]{\threecolumnlayout{0.5}{0.25}{#1}{#2}{#3}}%
\newcommand{\threecolumnbigmiddle}[3]{\threecolumnlayout{0.25}{0.5}{#1}{#2}{#3}}%
\newcommand{\threecolumnbigright}[3]{\threecolumnlayout{0.25}{0.25}{#1}{#2}{#3}}%
%%% END THREE-COLUMN LAYOUTS %%%
%%%%%%%%%%%% END HIGH-LEVEL FRAME LAYOUTS %%%%%%%%%%%%


%%%%%%%%%%%% LATEX FUNCTIONS %%%%%%%%%%%%
%%% A helper function to define complimentary keys (i.e., key1 != key2)
%
% Usage: \definecomplimentarykeys{prefix}{keyfamily}{key1}{key2}
%
% Generates keys of the form: pre@fam@key1 and pre@fam@key2 as would be created by:
%   \define@boolkey{prefix}{keyfamily}{key1}[true]{}
%   \define@boolkey{prefix}{keyfamily}{key2}[true]{}
% but tied such that they are mutually exclusive
% https://tex.stackexchange.com/a/53601
\NewDocumentCommand{\definecomplimentarykeys}{m m m m}%{pre}{fam}{key1}{key2}
{%
    \define@boolkey[#1]{#2}{#3}[true]%
    {%
        \in@{true}{##1}% ##1 is the true/false arugment to the key
        \ifin@%
            \csname #1@#2@#4false\endcsname%
        \else%
            \csname #1@#2@#4true\endcsname%
        \fi%
    }%
    \define@boolkey[#1]{#2}{#4}[true]%
    {%
        \in@{true}{##1}% ##1 is the true/false arugment to the key
        \ifin@%
            \csname #1@#2@#3false\endcsname%
        \else%
            \csname #1@#2@#3true\endcsname%
        \fi%
    }%
    %Make sure the keys are consistent by explicitly setting the first key.
    \setkeys[#1]{#2}{#3}
}%
%%%%%%%%%%%% END LATEX FUNCTIONS %%%%%%%%%%%%


%%%%%%%%%%%% IMAGE COMMANDS %%%%%%%%%%%%
%%% In column image %%%
%
% Usage: \image[optional caption][optional extra include options]{path/to/image}
\newlength{\espbeamer@image@captionheight}%
\newsavebox{\espbeamer@image@captionbox}%
\NewDocumentCommand{\image}{O{} O{} m}%
{%
    % Set the caption and calculate its height. This is slightly wrong for multiline captions (they underhang a small mount) but at least it supports them.
    \ifx\relax#1\relax%
        \setlength{\espbeamer@image@captionheight}{0pt}%
    \else%
        \savebox{\espbeamer@image@captionbox}%
        {%
            \begin{minipage}{\elementwidth}%
                \usebeamerfont*{caption}%
                \usebeamercolor*{caption}%
                \centering%
                \strut#1%
            \end{minipage}%
        }%
        \settototalheight{\espbeamer@image@captionheight}{\usebox{\espbeamer@image@captionbox}}%
    \fi%

    \centering%
    \vfil%
    \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@image@captionheight,keepaspectratio,#2]{#3}%
    \ifx\relax#1\relax%
    \else%
        \usebeamerfont*{caption}\\%
        \usebox{\espbeamer@image@captionbox}%
    \fi%
    \vfil%
}%

%%% In column page from a pdf %%%
%
% Usage: \pdfpage[optional caption][optional extra include options]{page num}{path/to/image}
\NewDocumentCommand{\pdfpage}{O{} O{} m m}%
{%
    \color{black}% There's a bug/feature in some pdfs where they inherit the font colour.
    \image[#1][#2,page=#3]{#4}%
}%

%%% Full-screen image (use in \begin{fullframe}\end{fullframe}) %%%
%
% Usage: \fullimage[optional caption][optional caption text colour][optional caption background colour]{path/to/image}
%
% Adapted from: https://www.ojdo.de/wp/2018/06/finally-the-definitive-full-frame-graphic-commands-for-beamer-in-latex/
\newcommand{\fullimagelight}[2][]{\fullimage[#1][OxfordBlue][white]{#2}}%
\newcommand{\fullimagedark}[2][]{\fullimage[#1][white][OxfordBlue]{#2}}%
\NewDocumentCommand{\fullimage}{O{} O{white} O{OxfordBlue} m}% 
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \tikzset%
        {%
            ffgcaption/.style=%
            {%
                anchor=south east,%
                font=\small,%
                text=#2,%
                text opacity=1,%
                inner sep=0.25\baselineskip,%
                fill=#3,%
                fill opacity=.5,%
                rounded corners=0.5ex%
            }%
        }%
        \begin{tikzpicture}[remember picture, overlay]%
        \node[at=(current page.center)]%
        {%
            \includegraphics[width=\elementwidth, height=\elementheight, keepaspectratio]{#4}%
            \tikz[overlay, remember picture] \node (bottomright) {};%
        };%
        \ifx\relax#1\relax%
        \else%
            \node[above left = \espbeamer@border@bottom and \espbeamer@border@right of bottomright, ffgcaption]%
            {%
                #1%
            };%
        \fi%
        \end{tikzpicture}%
    \endgroup%
}
%%%%%%%%%%%% END IMAGE COMMANDS %%%%%%%%%%%%



%%%%%%%%%%%% VIDEO COMMANDS %%%%%%%%%%%%
%%% In column video %%%
%
% Usage: \video[optional caption][noprogress,autostart,loop]{path/to/thumbnail}{path/to/video}
%
% This is a hack because pdfpc (and most linux viewers) do not currently support \movie's autostart command
% (see: https://github.com/pdfpc/pdfpc/issues/495).
% This will be cleaned-up/simplified once that change makes it back.

% A whole bunch of boxes and lengths for the \href hack
\newsavebox{\espbeamer@video@posterbox}%
\newsavebox{\espbeamer@video@captionbox}%
\newlength{\espbeamer@video@fudgealignx}%
\setlength{\espbeamer@video@fudgealignx}{-1pt}%
\newlength{\espbeamer@video@fudgealigny}%
\setlength{\espbeamer@video@fudgealigny}{-0.9pt}%
\newlength{\espbeamer@video@fudgealignwidth}%
\setlength{\espbeamer@video@fudgealignwidth}{-1pt}%-1pt
\newlength{\espbeamer@video@fudgealignheight}%
\setlength{\espbeamer@video@fudgealignheight}{-1.9pt}%-1.9pt
\newbox\espbeamer@video@videobox%
\newlength{\espbeamer@video@width}%
\newlength{\espbeamer@video@height}%
\newlength{\espbeamer@video@depth}%

% A string of parsed options to the underlying command. All videos receive autostarts as we achieve "onclick" by duplicating a static slide infront of an autostart slide.
%%% BEAMER MULTIMEDIA %%%
%\def\espbeamer@video@optionstring{autostart}% The video options.
%%% BEAMER MULTIMEDIA %%%
%%% HREF HACK %%%
\def\espbeamer@video@optionstring{?autostart}% The video options.
%%% HREF HACK %%%

% Define keys
\definecomplimentarykeys{espbeamer}{videokeys}{autostart}{onclick}%
\definecomplimentarykeys{espbeamer}{videokeys}{loop}{once}%
\definecomplimentarykeys{espbeamer}{videokeys}{noprogress}{progress}%

\newlength{\espbeamer@video@captionheight}%
\NewDocumentCommand{\video}{O{} O{} m m}
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \presetkeys[espbeamer]{videokeys}{autostart=true, loop=true, noprogress=true}{}
        \setkeys[espbeamer]{videokeys}{#2}%
        
        %Parse the keys into the option string for the lower-level command. Autostart is already included
        \ifespbeamer@videokeys@noprogress%
           %%% HREF HACK %%%
           \edef\espbeamer@video@optionstring{\espbeamer@video@optionstring\&noprogress}%
           %%% HREF HACK %%%
            %%% BEAMER MULTIMEDIA %%%
            %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,showcontrols==false}
       %\else
           %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,showcontrols==true}
            %%% BEAMER MULTIMEDIA %%%
        \fi%
        \ifespbeamer@videokeys@loop%
            %%% HREF HACK %%%
            \edef\espbeamer@video@optionstring{\espbeamer@video@optionstring\&loop}%
            %%% HREF HACK %%%
            %%% BEAMER MULTIMEDIA %%%
            %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,loop}
        %\else
            %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,once}
            %%% BEAMER MULTIMEDIA %%%
        \fi%
        
        % Set the caption and calculate its height. This is slightly wrong for multiline captions (they underhang a small mount) but at least it supports them.
        \ifx\relax#1\relax%
            \setlength{\espbeamer@video@captionheight}{0pt}%
        \else%
            \savebox{\espbeamer@video@captionbox}%
            {%
                \begin{minipage}{\elementwidth}%
                    \usebeamerfont*{caption}%
                    \usebeamercolor*{caption}%
                    \centering%
                    \strut#1%
                \end{minipage}%
            }%
            \settototalheight{\espbeamer@video@captionheight}{\usebox{\espbeamer@video@captionbox}}%
        \fi%
        
        %%% HREF HACK: Poster/video size fixes %%%
        % Fix the size of the \href video relative to the poster
        % Save the poster so we know its size (and ratio).
        \savebox{\espbeamer@video@posterbox}%
        {%
            \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
        }%

        % Calculate the size of the video from the poster
        \settowidth{\espbeamer@video@width}{\usebox{\espbeamer@video@posterbox}}%
        \settoheight{\espbeamer@video@height}{\usebox{\espbeamer@video@posterbox}}%
        \settodepth{\espbeamer@video@depth}{\usebox{\espbeamer@video@posterbox}}%
        %Then adjust to fix the difference in size
        \addtolength{\espbeamer@video@width}{\espbeamer@video@fudgealignwidth}%
        \addtolength{\espbeamer@video@height}{\espbeamer@video@fudgealignheight}%
    
        % Define a box to define the video size, and put the poster inside it.
        \setbox\espbeamer@video@videobox=\vbox{\vspace{\espbeamer@video@fudgealigny}\usebox{\espbeamer@video@posterbox}}%
        \wd\espbeamer@video@videobox=\espbeamer@video@width%
        \ht\espbeamer@video@videobox=\espbeamer@video@height%
        \dp\espbeamer@video@videobox=\espbeamer@video@depth%
        %%% HREF HACK: Poster/video size fixes %%%
    
        % Actually typeset the poster & video
        \centering%
        \vfil%
        
        %If we are starting onclick, create a copy of the video slide showing only the poster.
        %We use an empty href inorder to keep spacing exactly the same.
        \ifespbeamer@videokeys@onclick%
            \only<1>%
            {%
                %%% BEAMER MULTIMEDIA %%%
                %\includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}
                %%% BEAMER MULTIMEDIA %%%
                %%% HREF HACK %%%
                \href%
                {%
                    %Do nothing
                }%
                {%
                    % Poster
                    % Shift the poster to line up with the video
                    \hskip\espbeamer@video@fudgealignx%
                    % Insert the video box containing the poster
                    \box\espbeamer@video@videobox%
                }%
                %%% HREF HACK %%%
                %
                \ifx\relax#1\relax%
                \else%
                    \usebeamerfont*{caption}\\%
                    %%% HREF HACK %%%
                    \vspace{-\espbeamer@video@fudgealignheight}%
                    %%% HREF HACK %%%
                    \usebox{\espbeamer@video@captionbox}%
                \fi%
            }%
            
            % Start a second slide that will contain the autostart video
            \only<2>%
            {%
        \fi%

        % This is the video slide, regardless of autostart/onclick
        %%% BEAMER MULTIMEDIA %%%
        %\movie[#2]{\includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}}{#4}
        %%% BEAMER MULTIMEDIA %%%
        %%% HREF HACK %%%
        \href%
        {%
            % Video
            run:#4\espbeamer@video@optionstring%
        }%
        {%
            % Poster
            % Shift the poster to line up with the video
            \hskip\espbeamer@video@fudgealignx%
            % Insert the video box containing the poster
            \box\espbeamer@video@videobox%
        }%
        %%% HREF HACK %%%
        %
        \ifx\relax#1\relax%
        \else%
            \usebeamerfont*{caption}\\%
            %%% HREF HACK %%%
            \vspace{-\espbeamer@video@fudgealignheight}%
            %%% HREF HACK %%%
            \usebox{\espbeamer@video@captionbox}%
        \fi%
        
        % Close the second slide created to support onclick
        \ifespbeamer@videokeys@onclick%
            }%
        \fi%
        \vfil%
    \endgroup%
}%

%%% Full-screen image (use in \begin{fullframe}\end{fullframe}) %%%
%
% Usage: See \video for options
\NewDocumentCommand{\fullvideo}{O{noprogress,autostart,loop} m m}% 
{%
    \threerowlayout[leftmargin=0pt, rightmargin=0pt, topmargin=0pt, bottommargin=0pt, gutter=0pt]%
    {1.0}{0.0}%
    {%
        \video[][#1]{#2}{#3}
    }%
    {}{}%
}
%%%%%%%%%%%% END VIDEO COMMANDS %%%%%%%%%%%%



%%%%%%%%%%%% APPERANCE COMMANDS %%%%%%%%%%%%
%%% UNDERLINE %%%
%From: https://alexwlchan.net/2017/10/latex-underlines/
\renewcommand{\ULdepth}{1.45pt}
\contourlength{0.7pt}
\newcommand{\ul}[1]%
{%
    \uline{\phantom{#1}}%
    \llap%
    {%
        \usebeamercolor{background canvas}
        \contour{background canvas.bg}{#1}%
    }%
}
\newcommand*{\copyrighttext}[1]{\usebeamerfont*{copyright}\usebeamercolor*{copyright}\textcopyright{}#1 -- THIS DOESN'T WORK}

\newcommand*{\alertBlue}[1]{{\setBlueAlert{}\alert{#1}}}%
\newcommand*{\alertGreen}[1]{{\setGreenAlert{}\alert{#1}}}%
\newcommand*{\alertYellow}[1]{{\setYellowAlert{}\alert{#1}}}%
\newcommand*{\alertOrange}[1]{{\setOrangeAlert{}\alert{#1}}}%
\newcommand*{\alertRed}[1]{{\setRedAlert{}\alert{#1}}}%
\newcommand*{\alertGray}[1]{{\setGrayAlert{}\alert{#1}}}%
\newcommand*{\setBlueAlert}%
{%
    \setbeamercolor{alerted text}{fg=BLUE, bg=}%
}%
\newcommand*{\setGreenAlert}%
{%
    \setbeamercolor{alerted text}{fg=GREEN, bg=}%
}%
\newcommand*{\setYellowAlert}%
{%
    \setbeamercolor{alerted text}{fg=YELLOW, bg=}%
}%
\newcommand*{\setOrangeAlert}%
{%
    \setbeamercolor{alerted text}{fg=ORANGE, bg=}%
}%
\newcommand*{\setRedAlert}%
{%
    \setbeamercolor{alerted text}{fg=RED, bg=}%
}%
\newcommand*{\setGrayAlert}%
{%
    \setbeamercolor{alerted text}{fg=GRAY, bg=}%
}%
%%%%%%%%%%%% END APPERANCE COMMANDS %%%%%%%%%%%%



%%%%%%%%%%%% LOGO COMMANDS %%%%%%%%%%%%%%%%%%
%
% Usage: \addlogo[optional/path/to/special/titlepage/logo]{path/to/logo}
\NewDocumentCommand{\addlogo}{O{#2} m}{\addtitlelogo{#1}\addfootlogo{#2}}%
\newcommand*{\savelogos}{\savetitlelogos{}\savefootlogos{}}%
\newcommand*{\resetlogos}{\resettitlelogos{}\resetfootlogos{}}%
\newcommand*{\clearlogos}{\cleartitlelogos{}\clearfootlogos{}}%

%%% TITLE LOGOS %%%
% https://tex.stackexchange.com/questions/451/when-to-use-edef-noexpand-and-expandafter
%
% Usage: \addtitlelogo{path/to/titlelogo}
\def\espbeamer@titlelogos{}%
\def\espbeamer@defaulttitlelogos{}%
\newcommand*{\addtitlelogo}[1]%
{%
    \edef\espbeamer@titlelogos{\espbeamer@titlelogos \includegraphics[height=\espbeamer@titlelogo@maxheight]{#1} \hskip\espbeamer@titlelogo@sep}%
    \setbeamertemplate{titlelogo}{\espbeamer@titlelogos}%
    \settowidth{\espbeamer@titlelogo@maxwidth}{\espbeamer@titlelogos}%
}%
% Usage: \resettitlelogo{}
\newcommand*{\savetitlelogos}%
{%
    \edef\espbeamer@defaulttitlelogos{\espbeamer@titlelogos}%
}%
% Usage: \savetitlelogo{}
\newcommand*{\resettitlelogos}%
{%
    \edef\espbeamer@titlelogos{\espbeamer@defaulttitlelogos}%
    \setbeamertemplate{titlelogo}{\usebeamercolor*{titlelogo}\usebeamerfont*{titlelogo}\espbeamer@titlelogos}%
    \settowidth{\espbeamer@titlelogo@maxwidth}{\espbeamer@titlelogos}%
}%
% Usage: \cleartitlelogo{}
\newcommand*{\cleartitlelogos}%
{%
    \def\espbeamer@titlelogos{}%
    \setbeamertemplate{titlelogo}{}%
    \setlength{\espbeamer@titlelogo@maxwidth}{0pt}%
}%

%%% FOOT LOGOS %%%
%
% Usage: \addfootlogo{path/to/footerlogo}
\def\espbeamer@footlogos{}%
\def\espbeamer@defaultfootlogos{}%
\newcommand*{\addfootlogo}[1]%
{%
    \edef\espbeamer@footlogos{\espbeamer@footlogos \includegraphics[height=\espbeamer@footlogo@height]{#1} \hskip\espbeamer@footlogo@sep}%
    \setbeamertemplate{logo}{\espbeamer@footlogos}%
}%
% Usage: \savefootlogo{}
\newcommand*{\savefootlogos}%
{%
    \edef\espbeamer@defaultfootlogos{\espbeamer@footlogos}%
}%
% Usage: \resetfootlogo{}
\newcommand*{\resetfootlogos}%
{%
    \edef\espbeamer@footlogos{\espbeamer@defaultfootlogos}%
    \setbeamertemplate{logo}{\usebeamercolor*{logo}\usebeamerfont*{logo}\espbeamer@footlogos}%
}%
% Usage: \clearfootlogo{}
\newcommand*{\clearfootlogos}%
{%
    \def\espbeamer@footlogos{}%
    \setbeamertemplate{logo}{}
}%
%%%%%%%%%%%% END LOGO COMMANDS %%%%%%%%%%%%%%%%%%



%%%%%%%%%%%% BIO PHOTO COMMANDS %%%%%%%%%%%%%%%%%%
\def\espbeamer@bios{}%
\newcommand*\addperson[1]%
{%
    \edef\espbeamer@bios{\hskip\espbeamer@bio@sep \includegraphics[height=\espbeamer@bio@height]{#1} \espbeamer@bios}%
    \setbeamertemplate{bio}{\usebeamercolor*{bio}\usebeamerfont*{bio}\espbeamer@bios}%
}%
\newcommand*{\clearpeople}%
{%
    \def\espbeamer@bios{}%
    \setbeamertemplate{bio}{}%
}%
%%%%%%%%%%%% END BIO PHOTO COMMANDS %%%%%%%%%%%%%%%%%%



%%%%%%%%%%%% LOW-LEVEL FRAME LAYOUTS %%%%%%%%%%%%
%
%%% COLUMNS %%%
%
% Usage: \threecolumnlayout[debug,leftmargin,rightmargin,topmargin,bottommargin]{left fractional size}{middle fractional size}{left content}{middle content}{right content}
%
\newlength{\espbeamer@columnlayout@leftlimit}%
\newlength{\espbeamer@columnlayout@rightlimit}%
\newlength{\espbeamer@columnlayout@toplimit}%
\newlength{\espbeamer@columnlayout@bottomlimit}%
\newlength{\espbeamer@columnlayout@gutter}%
\define@key[espbeamer]{columnlayoutkeys}{leftmargin}[]{\setlength{\espbeamer@columnlayout@leftlimit}{#1}}%
\define@key[espbeamer]{columnlayoutkeys}{rightmargin}[]{\setlength{\espbeamer@columnlayout@rightlimit}{#1}}%
\define@key[espbeamer]{columnlayoutkeys}{topmargin}[]{\setlength{\espbeamer@columnlayout@toplimit}{#1}}%
\define@key[espbeamer]{columnlayoutkeys}{bottommargin}[]{\setlength{\espbeamer@columnlayout@bottomlimit}{#1}}%
\define@key[espbeamer]{columnlayoutkeys}{gutter}[]{\setlength{\espbeamer@columnlayout@gutter}{#1}}%
\define@boolkey[espbeamer]{columnlayoutkeys}{debug}[true]{}%
%
\newlength{\espbeamer@columnlayout@dividewidth}%
\newlength{\espbeamer@columnlayout@leftcolumnwidth}%
\newlength{\espbeamer@columnlayout@middlecolumnwidth}%
\newlength{\espbeamer@columnlayout@rightcolumnwidth}%
%
\NewDocumentCommand{\threecolumnlayout}{O{} m m +m +m +m}
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \ifespbeamer@debug%
            \presetkeys[espbeamer]{columnlayoutkeys}{debug=true}{}%
        \else%
            \presetkeys[espbeamer]{columnlayoutkeys}{debug=false}{}%
        \fi%
        \presetkeys[espbeamer]{columnlayoutkeys}{leftmargin=\espbeamer@border@left, rightmargin=\espbeamer@border@right, topmargin=\espbeamer@topmatter@height, bottommargin=\espbeamer@bottommatter@height, gutter=\espbeamer@gutter@column}{}
        \setkeys[espbeamer]{columnlayoutkeys}{#1}%

        \ifespbeamer@columnlayoutkeys@debug%
            \TPoptions{showboxes = true}%
        \fi%
        
        % Calculate the content width/height given the provided margins
        \setlength{\contentposx}{\espbeamer@columnlayout@leftlimit}%
        \setlength{\contentposy}{\espbeamer@columnlayout@toplimit}%
        \setlength{\contentwidth}{\paperwidth - \contentposx - \espbeamer@columnlayout@rightlimit}%
        \setlength{\contentheight}{\paperheight -  \contentposy - \espbeamer@columnlayout@bottomlimit}%
    
        % Divide up the content width into 3x (column+gutter) segements
        \setlength{\espbeamer@columnlayout@dividewidth}{\contentwidth + \espbeamer@columnlayout@gutter}%
        \setlength{\espbeamer@columnlayout@leftcolumnwidth}{#2\espbeamer@columnlayout@dividewidth}%
        \setlength{\espbeamer@columnlayout@middlecolumnwidth}{#3\espbeamer@columnlayout@dividewidth}%
        \setlength{\espbeamer@columnlayout@rightcolumnwidth}{\espbeamer@columnlayout@dividewidth - \espbeamer@columnlayout@leftcolumnwidth - \espbeamer@columnlayout@middlecolumnwidth}%
        
        % Calculte the first element
        \setlength{\elementposy}{\contentposy}%
        \setlength{\elementheight}{\contentheight}%
        \setlength{\elementposx}{\espbeamer@columnlayout@leftlimit}% Record the top-left of the first column+gutter
        \setlength{\elementwidth}{\espbeamer@columnlayout@leftcolumnwidth - \espbeamer@columnlayout@gutter}% Set the column width to (column+gutter)-gutter
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \layoutelement{#4}%
            \ifespbeamer@columnlayoutkeys@debug%
                \debugelement{}%
            \fi%
        \end{textblock*}%
        %
        \addtolength{\elementposx}{\elementwidth + \espbeamer@columnlayout@gutter}% Move to the top-left of the next column+gutter
        \setlength{\elementwidth}{\espbeamer@columnlayout@middlecolumnwidth - \espbeamer@columnlayout@gutter}% Set the column width to (column+gutter)-gutter
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \layoutelement{#5}%
            \ifespbeamer@columnlayoutkeys@debug%
                \debugelement{}%
            \fi%
        \end{textblock*}%
        %
        \addtolength{\elementposx}{\elementwidth + \espbeamer@columnlayout@gutter}% Move to the top-left of the next column+gutter
        \setlength{\elementwidth}{\espbeamer@columnlayout@rightcolumnwidth - \espbeamer@columnlayout@gutter}% Set the column width to (column+gutter)-gutter
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \layoutelement{#6}%
            \ifespbeamer@columnlayoutkeys@debug%
                \debugelement{}%
            \fi%
        \end{textblock*}%
    \endgroup%
}%

%%% ROWS %%%
%
% Usage: \threerowlayout[debug,leftmargin,rightmargin,topmargin,bottommargin]{left fractional size}{middle fractional size}{left content}{middle content}{right content}
%
\define@key[espbeamer]{rowlayoutkeys}{leftmargin}[]{\setlength{\espbeamer@rowlayout@leftlimit}{#1}}%
\define@key[espbeamer]{rowlayoutkeys}{rightmargin}[]{\setlength{\espbeamer@rowlayout@rightlimit}{#1}}%
\define@key[espbeamer]{rowlayoutkeys}{topmargin}[]{\setlength{\espbeamer@rowlayout@toplimit}{#1}}%
\define@key[espbeamer]{rowlayoutkeys}{bottommargin}[]{\setlength{\espbeamer@rowlayout@bottomlimit}{#1}}%
\define@key[espbeamer]{rowlayoutkeys}{gutter}[]{\setlength{\espbeamer@rowlayout@gutter}{#1}}%
\define@boolkey[espbeamer]{rowlayoutkeys}{debug}[true]{}%
%
\newlength{\espbeamer@rowlayout@leftlimit}%
\newlength{\espbeamer@rowlayout@rightlimit}%
\newlength{\espbeamer@rowlayout@toplimit}%
\newlength{\espbeamer@rowlayout@bottomlimit}%
\newlength{\espbeamer@rowlayout@gutter}%
\newlength{\espbeamer@rowlayout@divideheight}%
\newlength{\espbeamer@rowlayout@toprowheight}%
\newlength{\espbeamer@rowlayout@middlerowheight}%
\newlength{\espbeamer@rowlayout@bottomrowheight}%
%
\NewDocumentCommand{\threerowlayout}{O{} m m +m +m +m}
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \ifespbeamer@debug%
            \presetkeys[espbeamer]{rowlayoutkeys}{debug=true}{}%
        \else%
            \presetkeys[espbeamer]{rowlayoutkeys}{debug=false}{}%
        \fi%
        \presetkeys[espbeamer]{rowlayoutkeys}{leftmargin=\espbeamer@border@left, rightmargin=\espbeamer@border@right, topmargin=\espbeamer@topmatter@height, bottommargin=\espbeamer@bottommatter@height, gutter=\espbeamer@gutter@row}{}
        \setkeys[espbeamer]{rowlayoutkeys}{#1}%

        \ifespbeamer@rowlayoutkeys@debug%
            \TPoptions{showboxes = true}%
        \fi%
        
        % Calculate the content width/height given the provided margins
        \setlength{\contentposx}{\espbeamer@rowlayout@leftlimit}%
        \setlength{\contentposy}{\espbeamer@rowlayout@toplimit}%
        \setlength{\contentwidth}{\paperwidth - \contentposx - \espbeamer@rowlayout@rightlimit}%
        \setlength{\contentheight}{\paperheight -  \contentposy - \espbeamer@rowlayout@bottomlimit}%
    
        % Divide up the content width into 3x (row+gutter) segements
        \setlength{\espbeamer@rowlayout@divideheight}{\contentheight + \espbeamer@rowlayout@gutter}%
        \setlength{\espbeamer@rowlayout@toprowheight}{#2\espbeamer@rowlayout@divideheight}%
        \setlength{\espbeamer@rowlayout@middlerowheight}{#3\espbeamer@rowlayout@divideheight}%
        \setlength{\espbeamer@rowlayout@bottomrowheight}{\espbeamer@rowlayout@divideheight - \espbeamer@rowlayout@toprowheight - \espbeamer@rowlayout@middlerowheight}%

        % Calculte the first element
        \setlength{\elementposx}{\contentposx}%
        \setlength{\elementwidth}{\contentwidth}%
        \setlength{\elementposy}{\espbeamer@rowlayout@toplimit}%  Record the top-left of the first column+gutter
        \setlength{\elementheight}{\espbeamer@rowlayout@toprowheight - \espbeamer@rowlayout@gutter}% Set the row height to (row+gutter)-gutter
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \layoutelement{#4}%
            \ifespbeamer@rowlayoutkeys@debug%
                \debugelement{}%
            \fi%
        \end{textblock*}%
        %
        \addtolength{\elementposy}{\elementheight + \espbeamer@rowlayout@gutter}% Move to the top-left of the next row+gutter
        \setlength{\elementheight}{\espbeamer@rowlayout@middlerowheight - \espbeamer@rowlayout@gutter}% Set the row height to (row+gutter)-gutter
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \layoutelement{#5}%
            \ifespbeamer@rowlayoutkeys@debug%
                \debugelement{}%
            \fi%
        \end{textblock*}%
        %
        \addtolength{\elementposy}{\elementheight + \espbeamer@rowlayout@gutter}% Move to the top-left of the next row+gutter
        \setlength{\elementheight}{\espbeamer@rowlayout@bottomrowheight - \espbeamer@rowlayout@gutter}% Set the row height to (row+gutter)-gutter
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \layoutelement{#6}%
            \ifespbeamer@rowlayoutkeys@debug%
                \debugelement{}%
            \fi%
        \end{textblock*}%
    \endgroup%
}%

%%% Inidivual element of a multielement layout %%%
%
% Usage: \layoutelement{content}
%
\newcommand{\layoutelement}[1]%
{%
    \begin{minipage}[t][\elementheight][t]{\elementwidth}%
        #1%
    \end{minipage}
}%
%%%%%%%%%%%% END LOW-LEVEL FRAME LAYOUTS %%%%%%%%%%%%



%%%%%%%%%%%% DEBUG FUNCTIONS %%%%%%%%%%%%
% Convenience function for showing the predefined layouts
\newcommand*{\debugelement}
{%
    \begingroup%
        \TPoptions{showboxes = true}%
        \begin{textblock*}{\elementwidth}(\elementposx,\elementposy)%
            \vbox to \elementheight%
            {
                \color{GRAY}%
                \centering%
                \vfill%
                x-origin: \printlength{\elementposx}\\
                y-origin: \printlength{\elementposy}\\
                width: \printlength{\elementwidth}\\
                height: \printlength{\elementheight}%
                \vfill%
            }%
        \end{textblock*}%
    \endgroup
}
%%%%%%%%%%%% END DEBUG FUNCTIONS %%%%%%%%%%%%


%
%\newcommand{\adjustfrac}[1]%
%{%
%%    \FPeval{\result}{(#1*\strip@pt\contentwidth + \strip@pt\espbeamer@gutter@column)/(\strip@pt\contentwidth + \strip@pt\espbeamer@gutter@column)}
%%    \FPeval{\result}{(#1*\strip@pt\contentwidth)/(\strip@pt\contentwidth + \strip@pt\espbeamer@gutter@column)}
%%    \FPeval{\result}{#1}
%    \FPeval{\result}{(#1*\strip@pt\contentwidth + \strip@pt\espbeamer@gutter@column)/(\strip@pt\contentwidth + 2*\strip@pt\espbeamer@gutter@column)}
%    $#1 \to \result$
%}%