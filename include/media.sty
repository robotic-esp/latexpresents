%%%%%%%%%%%% IMAGE COMMANDS %%%%%%%%%%%%
%%% In column image %%%
%
% Usage: \image[optional caption][strictcaption/underhangcaption]{path/to/image}[extra options to includegraphics]
\newlength{\espbeamer@image@captionskip}%
\newlength{\espbeamer@image@captionheight}%
\newsavebox{\espbeamer@image@captionbox}%
\definecomplementarykeys{espbeamer}{imagekeys}{strictcaption}{underhangcaption}%
\NewDocumentCommand{\image}{O{} O{} m O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \presetkeys[espbeamer]{imagekeys}{strictcaption=true}{}%
        \setkeys[espbeamer]{imagekeys}{#2}%

        % Set the caption and calculate its height. This is slightly wrong for multiline captions (they underhang a small mount) but at least it supports them.
        \ifx\relax#1\relax%
            \setlength{\espbeamer@image@captionskip}{0pt}%
            \setlength{\espbeamer@image@captionheight}{0pt}%
        \else%
            \savebox{\espbeamer@image@captionbox}%
            {%
                \begin{minipage}{\elementwidth}%
                    \usebeamerfont{caption}%
                    \usebeamercolor{caption}%
                    \centering%
                    \strut#1%
                \end{minipage}%
            }%
            \ifespbeamer@imagekeys@strictcaption%
                % The height of the space between the figure and caption is (approx?) the depth of one-line of text.
                \settodepth{\espbeamer@image@captionskip}{\usebeamerfont{caption}\strut}%
                \settototalheight{\espbeamer@image@captionheight}{\usebox{\espbeamer@image@captionbox}}%
            \else%
                \setlength{\espbeamer@image@captionskip}{0pt}%
                \setlength{\espbeamer@image@captionheight}{0pt}%
            \fi%
        \fi%

        \centering%
        \vfil%
        \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@image@captionskip - \espbeamer@image@captionheight,keepaspectratio,#4]{#3}%
        \ifx\relax#1\relax%
        \else%
            \usebeamerfont{caption}\\%
            \usebox{\espbeamer@image@captionbox}%
        \fi%
        \vfil%
    \endgroup%
}%

%%% Image pairs %%%
%
% Usage: \imagestopbottom[optional top caption]{path/to/top/image}[optional bottom caption][strictcaption/underhangcaption]{path/to/bottom/image}[extra options to top includegraphics][extra options to bottom includegraphics]
\newlength{\espbeamer@imagestopbottom@captiontopskip}%
\newlength{\espbeamer@imagestopbottom@captiontopheight}%
\newsavebox{\espbeamer@imagestopbottom@captiontopbox}%
\newlength{\espbeamer@imagestopbottom@captionbottomskip}%
\newlength{\espbeamer@imagestopbottom@captionbottomheight}%
\newsavebox{\espbeamer@imagestopbottom@captionbottombox}%
\newlength{\espbeamer@imagestopbottom@imageheight}%
\definecomplementarykeys{espbeamer}{imagestopbottomkeys}{strictcaption}{underhangcaption}%
\NewDocumentCommand{\imagestopbottom}{O{} m O{} O{} m O{} O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \presetkeys[espbeamer]{imagestopbottomkeys}{strictcaption=true}{}%
        \setkeys[espbeamer]{imagestopbottomkeys}{#4}%

        % Set the caption and calculate its height. This is slightly wrong for multiline captions (they underhang a small mount) but at least it supports them.
        \ifx\relax#1\relax%
            \setlength{\espbeamer@imagestopbottom@captiontopskip}{0pt}%
            \setlength{\espbeamer@imagestopbottom@captiontopheight}{0pt}%
        \else%
            \savebox{\espbeamer@imagestopbottom@captiontopbox}%
            {%
                \begin{minipage}{\elementwidth}%
                    \usebeamerfont{caption}%
                    \usebeamercolor{caption}%
                    \centering%
                    \strut#1%
                \end{minipage}%
            }%
            % The height of the space between the figure and caption is (approx?) the depth of one-line of text.
            \settodepth{\espbeamer@imagestopbottom@captiontopskip}{\usebeamerfont{caption}\strut}%
            \settototalheight{\espbeamer@imagestopbottom@captiontopheight}{\usebox{\espbeamer@imagestopbottom@captiontopbox}}%
        \fi%
        \ifx\relax#3\relax%
            \setlength{\espbeamer@imagestopbottom@captionbottomskip}{0pt}%
            \setlength{\espbeamer@imagestopbottom@captionbottomheight}{0pt}%
        \else%
            \savebox{\espbeamer@imagestopbottom@captionbottombox}%
            {%
                \begin{minipage}{\elementwidth}%
                    \usebeamerfont{caption}%
                    \usebeamercolor{caption}%
                    \centering%
                    \strut#3%
                \end{minipage}%
            }%
            \ifespbeamer@imagestopbottomkeys@strictcaption%
                % The height of the space between the figure and caption is (approx?) the depth of one-line of text.
                \settodepth{\espbeamer@imagestopbottom@captionbottomskip}{\usebeamerfont{caption}\strut}%
                \settototalheight{\espbeamer@imagestopbottom@captionbottomheight}{\usebox{\espbeamer@imagestopbottom@captionbottombox}}%
            \else%
                \setlength{\espbeamer@imagestopbottom@captionbottomskip}{0pt}%
                \setlength{\espbeamer@imagestopbottom@captionbottomheight}{0pt}%
            \fi%
        \fi%

        % The height available for each individual image, splitting any space saved by underhanging a caption between the top/bottom images.
        % elementheight = imageheight + captionskip + captionheight + gutter + imageheight + captionskip + captionheight
        \setlength{\espbeamer@imagestopbottom@imageheight}{0.5\elementheight - 0.5\espbeamer@imagestopbottom@captiontopskip - 0.5\espbeamer@imagestopbottom@captiontopheight - 0.5\espbeamer@gutter@row - 0.5\espbeamer@imagestopbottom@captionbottomskip - 0.5\espbeamer@imagestopbottom@captionbottomheight}%

        \vfil%
        \centering%
        \includegraphics[width=\elementwidth,height=\espbeamer@imagestopbottom@imageheight,keepaspectratio,#6]{#2}%
        \ifx\relax#1\relax%
        \else%
            \usebeamerfont{caption}\\%
            \usebox{\espbeamer@imagestopbottom@captiontopbox}%
        \fi%
        %I don't exactly know why this -1pt is necessary.
        \vskip-1pt%
        \vfil%
        \vskip\espbeamer@gutter@row%
        \vfil%
        \includegraphics[width=\elementwidth,height=\espbeamer@imagestopbottom@imageheight,keepaspectratio,#7]{#5}%
        \ifx\relax#3\relax%
        \else%
            \usebeamerfont{caption}\\%
            \usebox{\espbeamer@imagestopbottom@captionbottombox}%
        \fi%
        \vfil%
    \endgroup%
}%
%
% Usage: \imagesleftright[optional left caption]{path/to/left/image}[optional right caption][strictcaption/underhangcaption]{path/to/right/image}[extra options to left includegraphics][extra options to right includegraphics]
\newlength{\espbeamer@imagesleftright@captionleftskip}%
\newlength{\espbeamer@imagesleftright@captionleftheight}%
\newsavebox{\espbeamer@imagesleftright@captionleftbox}%
\newlength{\espbeamer@imagesleftright@captionrightskip}%
\newlength{\espbeamer@imagesleftright@captionrightheight}%
\newsavebox{\espbeamer@imagesleftright@captionrightbox}%
\newlength{\espbeamer@imagesleftright@imagewidth}%
\definecomplementarykeys{espbeamer}{imagesleftrightkeys}{strictcaption}{underhangcaption}%
\NewDocumentCommand{\imagesleftright}{O{} m O{} O{} m O{} O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \presetkeys[espbeamer]{imagesleftrightkeys}{strictcaption=true}{}%
        \setkeys[espbeamer]{imagesleftrightkeys}{#4}%

        %0.505 is to keep rounding from making the images overflow to a new line.
        \setlength{\espbeamer@imagesleftright@imagewidth}{0.5\elementwidth - 0.505\espbeamer@gutter@column}%

        % Set the caption and calculate its height. This is slightly wrong for multiline captions (they underhang a small mount) but at least it supports them.
        \ifx\relax#1\relax%
            \setlength{\espbeamer@imagesleftright@captionleftskip}{0pt}%
            \setlength{\espbeamer@imagesleftright@captionleftheight}{0pt}%
        \else%
            \savebox{\espbeamer@imagesleftright@captionleftbox}%
            {%
                \begin{minipage}{\espbeamer@imagesleftright@imagewidth}%
                    \usebeamerfont{caption}%
                    \usebeamercolor{caption}%
                    \centering%
                    \strut#1%
                \end{minipage}%
            }%
            \ifespbeamer@imagesleftrightkeys@strictcaption%
                % The height of the space between the figure and caption is (approx?) the depth of one-line of text.
                \settodepth{\espbeamer@imagesleftright@captionleftskip}{\usebeamerfont{caption}\strut}%
                \settototalheight{\espbeamer@imagesleftright@captionleftheight}{\usebox{\espbeamer@imagesleftright@captionleftbox}}%
            \else%
                \setlength{\espbeamer@imagesleftright@captionleftskip}{0pt}%
                \setlength{\espbeamer@imagesleftright@captionleftheight}{0pt}%
            \fi%
        \fi%
        \ifx\relax#3\relax%
            \setlength{\espbeamer@imagesleftright@captionrightskip}{0pt}%
            \setlength{\espbeamer@imagesleftright@captionrightheight}{0pt}%
        \else%
            \savebox{\espbeamer@imagesleftright@captionrightbox}%
            {%
                \begin{minipage}{\espbeamer@imagesleftright@imagewidth}%
                    \usebeamerfont{caption}%
                    \usebeamercolor{caption}%
                    \centering%
                    \strut#3%
                \end{minipage}%
            }%
            \ifespbeamer@imagesleftrightkeys@strictcaption%
                % The height of the space between the figure and caption is (approx?) the depth of one-line of text.
                \settodepth{\espbeamer@imagesleftright@captionrightskip}{\usebeamerfont{caption}\strut}%
                \settototalheight{\espbeamer@imagesleftright@captionrightheight}{\usebox{\espbeamer@imagesleftright@captionrightbox}}%
            \else%
                \setlength{\espbeamer@imagesleftright@captionrightskip}{0pt}%
                \setlength{\espbeamer@imagesleftright@captionrightheight}{0pt}%
            \fi%
        \fi%

        \vfil%
        \centering%
        \includegraphics[width=\espbeamer@imagesleftright@imagewidth,height=\elementheight - \espbeamer@imagesleftright@captionleftskip - \espbeamer@imagesleftright@captionleftheight,keepaspectratio,#6]{#2}%
        \hfil%
        \hskip\espbeamer@gutter@column%
        \hfil%
        \includegraphics[width=\espbeamer@imagesleftright@imagewidth,height=\elementheight - \espbeamer@imagesleftright@captionrightskip - \espbeamer@imagesleftright@captionrightheight,keepaspectratio,#7]{#5}%
        \ifx\relax#1\relax%
        \else%
            \usebeamerfont{caption}\\%
            \usebox{\espbeamer@imagesleftright@captionleftbox}%
        \fi%
        \ifx\relax#3\relax%
            \ifx\relax#1\relax%
            \else%
                \hfil%
                \hspace{\espbeamer@gutter@column}%
                \hfil%
                \hspace{\espbeamer@imagesleftright@imagewidth}%
                \strut%
            \fi%
        \else%
            \usebeamerfont{caption}%
            \ifx\relax#1\relax%
                \\%
                \hspace{\espbeamer@imagesleftright@imagewidth}%
            \fi%
            \hfil%
            \hspace{\espbeamer@gutter@column}%
            \hfil%
            \usebox{\espbeamer@imagesleftright@captionrightbox}%
        \fi%
        \vfil%
    \endgroup%
}%

%%% In column page from a pdf %%%
%
% Usage: \pdfpage[optional caption][strictcaption/underhangcaption]{page num}{path/to/image}[extra options to includegraphics]
\NewDocumentCommand{\pdfpage}{O{} O{} m m O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \color{black}% There's a bug/feature in some pdfs where they inherit the font colour.
        % Only pass the argument on if it exists, as setting the colour will result in a null caption.
        \ifx\relax#1\relax%
            \image[][#2]{#4}[page=#3,#5]%
        \else
            \image[\color{TEXT}#1][#2]{#4}[page=#3,#5]%
        \fi
    \endgroup%
}%
% Usage: \pdfpagestopbottom[optional top caption]{top page num}{path/to/top/image}[optional bottom caption][strictcaption/underhangcaption]{bottom page num}{path/to/bottom/image}[extra options to top includegraphics][extra options to bottom includegraphics]
\NewDocumentCommand{\pdfpagestopbottom}{O{} m m O{} O{} m m O{} O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \color{black}% There's a bug/feature in some pdfs where they inherit the font colour.
        % Only pass the argument on if it exists, as setting the colour will result in a null caption.
        \ifx\relax#1\relax%
            \ifx\relax#4\relax%
                \imagestopbottom[]{#3}[][#5]{#7}[page=#2,#8][page=#6,#9]%
            \else
                \imagestopbottom[]{#3}[\color{TEXT}#4][#5]{#7}[page=#2,#8][page=#6,#9]%
            \fi
        \else
            \ifx\relax#4\relax%
                \imagestopbottom[\color{TEXT}#1]{#3}[][#5]{#7}[page=#2,#8][page=#6,#9]%
            \else
                \imagestopbottom[\color{TEXT}#1]{#3}[\color{TEXT}#4][#5]{#7}[page=#2,#8][page=#6,#9]%
            \fi
        \fi
    \endgroup%
}%
% Usage: \pdfpagesleftright[optional left caption]{left page num}{path/to/left/image}[optional right caption][strictcaption/underhangcaption]{right page num}{path/to/right/image}[extra options to left includegraphics][extra options to right includegraphics]
\NewDocumentCommand{\pdfpagesleftright}{O{} m m O{} O{} m m O{} O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \color{black}% There's a bug/feature in some pdfs where they inherit the font colour.
        % Only pass the argument on if it exists, as setting the colour will result in a null caption.
        \ifx\relax#1\relax%
            \ifx\relax#4\relax%
                \imagesleftright[]{#3}[][#5]{#7}[page=#2,#8][page=#6,#9]%
            \else
                \imagesleftright[]{#3}[\color{TEXT}#4][#5]{#7}[page=#2,#8][page=#6,#9]%
            \fi
        \else
            \ifx\relax#4\relax%
                \imagesleftright[\color{TEXT}#1]{#3}[][#5]{#7}[page=#2,#8][page=#6,#9]%
            \else
                \imagesleftright[\color{TEXT}#1]{#3}[\color{TEXT}#4][#5]{#7}[page=#2,#8][page=#6,#9]%
            \fi
        \fi
    \endgroup%
}%

%%% Full-screen image %%%
%
% Usage: \fullimage[optional caption][optional caption text colour][optional caption background colour]{path/to/image}[extra options for includegraphics]
\define@boolkey[espbeamer]{fullimagekeys}{darkcaption}[true]%
{%
    \ifespbeamer@fullimagekeys@darkcaption%
        \def\espbeamer@fullimage@caption@textcolour{ThemePaletteLightBackground}%
        \def\espbeamer@fullimage@caption@backgroundcolour{ThemePaletteDarkText}%
    \fi%
}%
\define@boolkey[espbeamer]{fullimagekeys}{lightcaption}[true]%
{%
    \ifespbeamer@fullimagekeys@lightcaption%
        \def\espbeamer@fullimage@caption@textcolour{ThemePaletteDarkText}%
        \def\espbeamer@fullimage@caption@backgroundcolour{ThemePaletteLightBackground}%
    \fi%
}%
\define@key[espbeamer]{fullimagekeys}{captiontext}%
{%
    \def\espbeamer@fullimage@caption@textcolour{#1}%
}%
\define@key[espbeamer]{fullimagekeys}{captionbackground}%
{%
    \def\espbeamer@fullimage@caption@backgroundcolour{#1}%
}%
\define@choicekey*[espbeamer]{fullimagekeys}{captionposition}[\val\nr]{southwest,south,southeast,east,northeast,north,northwest,west}%
{%
    \ifcase\nr\relax%
        %\nr=0, southwest
        \setlength{\espbeamer@fullimage@vertical}{\espbeamer@border@bottom}
        \setlength{\espbeamer@fullimage@horizontal}{\espbeamer@border@left}
        \def\espbeamer@fullimage@caption@node{\node[above right = \espbeamer@fullimage@vertical and \espbeamer@fullimage@horizontal of image.south west, ffgcaption, anchor = south west]}
    \or
        %\nr=1, south
        \setlength{\espbeamer@fullimage@vertical}{\espbeamer@border@bottom}
        \def\espbeamer@fullimage@caption@node{\node[above = \espbeamer@fullimage@vertical of image.south, ffgcaption, anchor = south]}
    \or
        %\nr=3, southeast
        \setlength{\espbeamer@fullimage@vertical}{\espbeamer@border@bottom}
        \setlength{\espbeamer@fullimage@horizontal}{\espbeamer@border@right}
        \def\espbeamer@fullimage@caption@node{\node[above left = \espbeamer@fullimage@vertical and \espbeamer@fullimage@horizontal of image.south east, ffgcaption, anchor = south east]}
    \or
        %\nr=4, east
        \setlength{\espbeamer@fullimage@horizontal}{\espbeamer@border@right}
        \def\espbeamer@fullimage@caption@node{\node[left = \espbeamer@fullimage@horizontal of image.east, ffgcaption, anchor = east]}
    \or
        %\nr=5, northeast
        \setlength{\espbeamer@fullimage@vertical}{\espbeamer@border@top}
        \setlength{\espbeamer@fullimage@horizontal}{\espbeamer@border@right}
        \def\espbeamer@fullimage@caption@node{\node[below left = \espbeamer@fullimage@vertical and \espbeamer@fullimage@horizontal of image.north east, ffgcaption, anchor = north east]}
    \or
        %\nr=6, north
        \setlength{\espbeamer@fullimage@vertical}{\espbeamer@border@top}
        \def\espbeamer@fullimage@caption@node{\node[below = \espbeamer@fullimage@vertical of image.north, ffgcaption, anchor = north]}
    \or
        %\nr=7, northwest
        \setlength{\espbeamer@fullimage@vertical}{\espbeamer@border@top}
        \setlength{\espbeamer@fullimage@horizontal}{\espbeamer@border@left}
        \def\espbeamer@fullimage@caption@node{\node[below right = \espbeamer@fullimage@vertical and \espbeamer@fullimage@horizontal of image.north west, ffgcaption, anchor = north west]}
    \or
        %\nr=8, west
        \setlength{\espbeamer@fullimage@horizontal}{\espbeamer@border@left}
        \def\espbeamer@fullimage@caption@node{\node[right = \espbeamer@fullimage@horizontal of image.west, ffgcaption, anchor = west]}
    \fi%
}%
\newlength{\espbeamer@fullimage@vertical}%
\newlength{\espbeamer@fullimage@horizontal}%
\NewDocumentCommand{\fullimage}{O{} O{} m O{}}%
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        % captiontext and captionbackground default to the values for darkcaption
        \presetkeys[espbeamer]{fullimagekeys}{captionposition=southeast,captiontext=ThemePaletteLightBackground,captionbackground=ThemePaletteDarkText,darkcaption=false,lightcaption=false}{}%
        \setkeys[espbeamer]{fullimagekeys}{#2}%

        % The picture is set in TikZ, so doesn't need the container. But doing this (1) provides an easy way to create the black background and (2) ensures that the enivornment variables (e.g., dimensions) are consistent with all the other frames.
        % This unfortunately means that we have to store the relevant borders into temporary variables (done in the captionposition key) since the noborder option termporarily zeroes out the global values.
        \multirowlayout[nodecorations, noborder, gutter=0pt]%
        {1.0}%
        {%
            % Black background
            \textblockcolour{black}%

            % Adapted from: https://www.ojdo.de/wp/2018/06/finally-the-definitive-full-frame-graphic-commands-for-beamer-in-latex/
            \tikzset%
            {%
                ffgcaption/.style=%
                {%
                    font=\small,%
                    text=\espbeamer@fullimage@caption@textcolour,%
                    text opacity=1,%
                    inner sep=0.25\baselineskip,%
                    fill=\espbeamer@fullimage@caption@backgroundcolour,%
                    fill opacity=.5,%
                    rounded corners=0.5ex%
                }%
            }%
            \begin{tikzpicture}[remember picture, overlay]%
                \node[at=(current page.center), inner sep = 0pt] (image)%
                {%
                    \includegraphics[width=\elementwidth, height=\elementheight, keepaspectratio,#4]{#3}%
                };%
                \ifx\relax#1\relax%
                \else%
                \espbeamer@fullimage@caption@node%
                {%
                    #1%
                };%
                \fi%
            \end{tikzpicture}%
        }%
    \endgroup%
}
%%%%%%%%%%%% END IMAGE COMMANDS %%%%%%%%%%%%



%%%%%%%%%%%% VIDEO COMMANDS %%%%%%%%%%%%
%%% In column video %%%
%
% Usage: \video[optional caption][noprogress/progress, autostart/onclick, loop/once, center/nocenter]{path/to/thumbnail}{path/to/video}


% Define keys
\definecomplementarykeys{espbeamer}{videokeys}{autostart}{onclick}%
\definecomplementarykeys{espbeamer}{videokeys}{loop}{once}%
\definecomplementarykeys{espbeamer}{videokeys}{noprogress}{progress}%
\definecomplementarykeys{espbeamer}{videokeys}{center}{nocenter}%
\definecomplementarykeys{espbeamer}{videokeys}{strictcaption}{underhangcaption}%
%
\ifespbeamer@adobe%
\else
    % This is a hack because pdfpc (and most linux viewers) do not currently support \movie's autostart command
    % (see: https://github.com/pdfpc/pdfpc/issues/495).
    % This will be cleaned-up/simplified once that change makes it back.

    % A whole bunch of boxes and lengths for the \href hack
    %%% HREF HACK %%%
    \newsavebox{\espbeamer@video@posterbox}%
    \newlength{\espbeamer@video@fudgealignx}%
    \setlength{\espbeamer@video@fudgealignx}{-1pt}%
    \newlength{\espbeamer@video@fudgealigny}%
    \setlength{\espbeamer@video@fudgealigny}{-0.9pt}%
    \newlength{\espbeamer@video@fudgealignwidth}%
    \setlength{\espbeamer@video@fudgealignwidth}{-1pt}%-1pt
    \newlength{\espbeamer@video@fudgealignheight}%
    \setlength{\espbeamer@video@fudgealignheight}{-1.9pt}%-1.9pt
    \newbox\espbeamer@video@videobox%
    \newlength{\espbeamer@video@width}%
    \newlength{\espbeamer@video@height}%
    \newlength{\espbeamer@video@depth}%
    %%% HREF HACK %%%

    % A string of parsed options to the underlying command.
    \ifespbeamer@handout%
        % In handout mode, all videos have the same options.
        \def\espbeamer@video@optionstring{once,showcontrols=true}% No HREF HACK
    \else
        % In presentation mode, all videos receive autostarts as we achieve "onclick" by duplicating a static slide infront of an autostart slide.
        %%% BEAMER MULTIMEDIA %%%
        %\def\espbeamer@video@optionstring{autostart}%
        %%% BEAMER MULTIMEDIA %%%
        %%% HREF HACK %%%
        \def\espbeamer@video@optionstring{?autostart}%
        %%% HREF HACK %%%
    \fi%
\fi%
%
\newlength{\espbeamer@video@captionheight}%
\newsavebox{\espbeamer@video@captionbox}%
\NewDocumentCommand{\video}{O{} O{} m m}
{%
    \begingroup% Sets "scope" so settings/keys don't leak.
        \presetkeys[espbeamer]{videokeys}{autostart=true, loop=true, noprogress=true, center=true, strictcaption=true}{}
        \setkeys[espbeamer]{videokeys}{#2}%

        % Set the caption and calculate its height. This is slightly wrong for multiline captions (they underhang a small mount) but at least it supports them.
        \ifx\relax#1\relax%
            \setlength{\espbeamer@video@captionheight}{0pt}%
        \else%
            \savebox{\espbeamer@video@captionbox}%
            {%
                \begin{minipage}{\elementwidth}%
                    \usebeamerfont{caption}%
                    \usebeamercolor{caption}%
                    \centering%
                    \strut#1%
                \end{minipage}%
            }%
            \ifespbeamer@videokeys@strictcaption%
                \settototalheight{\espbeamer@video@captionheight}{\usebox{\espbeamer@video@captionbox}}%
            \else%
                \setlength{\espbeamer@video@captionheight}{0pt}%
            \fi%
        \fi%

        % Parse the options and configure the poster
        \ifespbeamer@adobe%
        \else%
            \ifespbeamer@handout%
            \else%
                %Parse the keys into the option string for the lower-level command. Autostart is already included
                \ifespbeamer@videokeys@noprogress%
                   %%% HREF HACK %%%
                   \edef\espbeamer@video@optionstring{\espbeamer@video@optionstring\&noprogress}%
                   %%% HREF HACK %%%
                    %%% BEAMER MULTIMEDIA %%%
                    %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,showcontrols=false}
               %\else
                   %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,showcontrols=true}
                    %%% BEAMER MULTIMEDIA %%%
                \fi%
                \ifespbeamer@videokeys@loop%
                    %%% HREF HACK %%%
                    \edef\espbeamer@video@optionstring{\espbeamer@video@optionstring\&loop}%
                    %%% HREF HACK %%%
                    %%% BEAMER MULTIMEDIA %%%
                    %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,loop}
                %\else
                    %\edef\espbeamer@video@optionstring{\espbeamer@video@optionstring,once}
                    %%% BEAMER MULTIMEDIA %%%
                \fi%
            \fi%

            %%% HREF HACK: Poster/video size fixes %%%
            % Fix the size of the \href video relative to the poster
            % Save the poster so we know its size (and ratio).
            \savebox{\espbeamer@video@posterbox}%
            {%
                \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
            }%

            % Calculate the size of the video from the poster
            \settowidth{\espbeamer@video@width}{\usebox{\espbeamer@video@posterbox}}%
            \settoheight{\espbeamer@video@height}{\usebox{\espbeamer@video@posterbox}}%
            \settodepth{\espbeamer@video@depth}{\usebox{\espbeamer@video@posterbox}}%
            %Then adjust to fix the difference in size
            \addtolength{\espbeamer@video@width}{\espbeamer@video@fudgealignwidth}%
            \addtolength{\espbeamer@video@height}{\espbeamer@video@fudgealignheight}%

            % Define a box to define the video size, and put the poster inside it.
            \setbox\espbeamer@video@videobox=\vbox{\vspace{\espbeamer@video@fudgealigny}\usebox{\espbeamer@video@posterbox}}%
            \wd\espbeamer@video@videobox=\espbeamer@video@width%
            \ht\espbeamer@video@videobox=\espbeamer@video@height%
            \dp\espbeamer@video@videobox=\espbeamer@video@depth%
            %%% HREF HACK: Poster/video size fixes %%%
        \fi%

        % Actually typeset the poster & video
        \ifespbeamer@videokeys@center%
            \centering%
            \vfil%
        \fi%

        %If we are starting onclick, create a copy of the video slide showing only the poster.
        \ifespbeamer@videokeys@onclick%
            \ifespbeamer@handout%
            \else%
                \ifespbeamer@novideos%
                \else%
                    \only<1>%
                    {%
                        %%% HREF HACK %%%
                        % When multimedia works, adobe and pdfpc will both just use an image here regardless of present/handout. Until then, we have to switch on both
                        \ifespbeamer@adobe%
                        %%% HREF HACK %%%
                            \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
                        %%% HREF HACK %%%
                        \else%
                            \ifespbeamer@handout%
                                \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
                            \else%
                                %We use an empty href inorder to keep spacing exactly the same.
                                \href%
                                {%
                                    %Do nothing
                                }%
                                {%
                                    % Poster
                                    % Shift the poster to line up with the video
                                    \hskip\espbeamer@video@fudgealignx%
                                    % Insert the video box containing the poster
                                    \box\espbeamer@video@videobox%
                                }%
                            \fi%
                        \fi%
                        %%% HREF HACK %%%
                        % \href can't be followed by a newline
                        % Set the caption
                        \ifx\relax#1\relax%
                        \else%
                            \usebeamerfont{caption}\\%
                            %%% HREF HACK %%%
                            \ifespbeamer@adobe%
                            \else%
                                \ifespbeamer@handout% Because handout isn't using the href hack
                                \else%
                                    \vspace{-\espbeamer@video@fudgealignheight}%
                                \fi%
                            \fi%
                            %%% HREF HACK %%%
                            \usebox{\espbeamer@video@captionbox}%
                        \fi%
                    }%

                    % Start a second slide that will contain the autostart video
                    \only<2>%
                    {%
                \fi%
            \fi%
        \fi%

        % This is the video slide, regardless of autostart/onclick
        \ifespbeamer@novideos%
            \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
        \else
            \ifespbeamer@adobe%
                % Keyval options don't like macros. To make things expand in the proper order, you define a temporary variable \x with expansion tokens and then execute \x.
                % Note that we are defining \x inside a group which is closed when by USING \x, which forces the expansions of the if statements without expanding anything else. I think.
                % https://tex.stackexchange.com/a/228329
                % https://tex.stackexchange.com/a/152048
                \begingroup\edef\x%
                {%
                    \endgroup%
                    \noexpand\includemedia%
                    \expandafter%
                    [%
                        keepaspectratio,%
                        \ifespbeamer@handout%
                            playbutton=fancy,% This would apparently need to be "plain" for XeLaTeX according to media9 doc.
                            activate=onclick,%
                            deactivate=pageinvisible,%
                        \else%
                            playbutton=none,%
                            activate=pagevisible,%
                            deactivate=pageinvisible,%
                        \fi%
                        passcontext,% passthrough right-clicks to VPlayer instead of Adobe Reader
                        transparent,% transparent player background
                        addresource=#4,%
                        flashvars=%
                        {%
                            source=#4%
                            &autoPlay=true% Automatically starts playback after activation
                            \ifespbeamer@handout%
                                &autoRewind=true% Automatically rewind to the first frame after playback has finished
                            \else%
                                \ifespbeamer@videokeys@loop%
                                    &autoRewind=true% Automatically rewind to the first frame after playback has finished
                                    &loop=true% Media is played in a loop
                                \fi%
                            \fi%
                        }%
                    ]%
                    {%
                        \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
                    }%
                    {VPlayer.swf}%
                }%
                \x%
            \else%
                %%% HREF HACK %%%
                % When multimedia works, the only difference between pdfpc handout and presentation will be the option string. Until then, we have to switch
                \ifespbeamer@handout%
                %%% HREF HACK %%%

                    % Keyval options don't like macros. To make things expand in the proper order, you define a temporary variable \x with expansion tokens and then execute \x.
                    % Note that we are defining \x inside a group which is closed when by USING \x, which forces the expansions of the if statements without expanding anything else. I think.
                    % https://tex.stackexchange.com/a/228329
                    % https://tex.stackexchange.com/a/152048
                    \begingroup\edef\x%
                    {%
                        \endgroup%
                        \noexpand\movie%
                        \expandafter%
                        [%
                            \espbeamer@video@optionstring%
                        ]%
                        {%
                            \includegraphics[width=\elementwidth,height=\elementheight - \espbeamer@video@captionheight,keepaspectratio]{#3}%
                        }%
                        {#4}%
                    }%
                    \x%
                    % The \x hack can't have a new line afterwards
                %%% HREF HACK %%%
                \else%
                    \href%
                    {%
                        % Video
                        run:#4\espbeamer@video@optionstring%
                    }%
                    {%
                        % Poster
                        % Shift the poster to line up with the video
                        \hskip\espbeamer@video@fudgealignx%
                        % Insert the video box containing the poster
                        \box\espbeamer@video@videobox%
                    }%
                \fi%
                %%% HREF HACK %%%
            \fi%
        \fi%
        % \href can't be followed by a newline
        % Set the caption
        \ifx\relax#1\relax%
        \else%
            \usebeamerfont{caption}\\%
            %%% HREF HACK %%%
            \ifespbeamer@adobe%
            \else%
                \ifespbeamer@handout% Because handout isn't using the href hack
                \else%
                    \vspace{-\espbeamer@video@fudgealignheight}%
                \fi%
            \fi%
            %%% HREF HACK %%%
            \usebox{\espbeamer@video@captionbox}%
        \fi%

        % Close the second slide created to support onclick
        \ifespbeamer@videokeys@onclick%
            \ifespbeamer@handout%
            \else%
                \ifespbeamer@novideos%
                \else%
                    }%
                \fi%
            \fi%
        \fi%

        % Center vertically
        \ifespbeamer@videokeys@center%
            \vfil%
        \fi%
    \endgroup%
}%

%%% Full-screen image%%%
%
% Usage: See \video for options
\NewDocumentCommand{\fullvideo}{O{noprogress,autostart,loop} m m}%
{%
    \multirowlayout[nodecorations, noborder, gutter=0pt]%
    {1.0}%
    {%
        % Black background
        \textblockcolour{black}%
        \video[][#1]{#2}{#3}
    }%
}
%%%%%%%%%%%% END VIDEO COMMANDS %%%%%%%%%%%%
