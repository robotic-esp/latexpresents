%%%%%%%%%%%% APPERANCE COMMANDS %%%%%%%%%%%%
%TODO: Should only and uncover have different counters?
%%% INCREMENTAL UNCOVER (Stays) %%%
\NewDocumentCommand{\uncoverstep}{+m}
{%
    % Step counter before so that the first \uncoverstep is slide 2
    \stepcounter{latexpresents@counter@only}%
    % All future slides
    \uncover<\value{latexpresents@counter@only}->%
    {%
        #1
    }%
}%
%%% INCREMENTAL ONLY (Goes away) %%%
\NewDocumentCommand{\onlyonce}{+m}
{%
    % Just current slide
    \only<\value{latexpresents@counter@only}>%
    {%
        #1
    }%
    \stepcounter{latexpresents@counter@only}%
    % Step counter after so that the first \onlyonce is slide 1
}%
%%%% REPLACE (for one slide) %%%
%\NewDocumentCommand{\replaceonce}{+m +m}
%{%
%    % Up to the current slide
%    \only<-\value{latexpresents@counter@only}>%
%    {%
%        #1
%    }%
%    % Step counter inbetween
%    \stepcounter{latexpresents@counter@only}%
%    % A new slide
%    \only<\value{latexpresents@counter@only}>%
%    {%
%        #2
%    }%
%    % Step counter inbetween
%    \stepcounter{latexpresents@counter@only}%
%    % All future slides
%    \only<\value{latexpresents@counter@only}->%
%    {%
%      #1
%    }%
%}%

% I no longer see a need for this duration-based function.
% It requires an additional counter to be initialized in latexpresents/latexpresents.sty:
%   \newcounter{latexpresents@counter@onlylast}
%\NewDocumentCommand{\onlyfor}{m +m}
%{%
%    \setcounter{latexpresents@counter@onlylast}{\value{latexpresents@counter@only}}
%    \addtocounter{latexpresents@counter@onlylast}{#1}
%    \addtocounter{latexpresents@counter@onlylast}{-1}
%    \only<\value{latexpresents@counter@only}-\value{latexpresents@counter@onlylast}>%
%    {%
%        #2
%    }%
%    \addtocounter{latexpresents@counter@only}{#1}%
%}%
%%% INCREMENTAL REVEAL %%%

%%% SLIDE TRANSITIONS %%%
% Require pdfpc > 4.4.0
\definecomplementarykeys{latexpresents}{transition}{nodebug}{debug}%
\NewDocumentCommand{\latexpresents@transition@cmd}{O{}}
{%
    \iflatexpresents@debug%
        \presetkeys[latexpresents]{transition}{debug=true}{}%
    \else%
        \presetkeys[latexpresents]{transition}{debug=false}{}%
    \fi%
    \setkeys[latexpresents]{transition}{#1}%

    \ifx\latexpresents@transition@effect\empty%
        \transreplace%
        \iflatexpresents@transition@debug%
            \say{\\ `\detokenize{\\transreplace}\\}%
        \fi%
    \else%
        \ifx\latexpresents@transition@time\empty%
            \ifx\latexpresents@transition@angle\empty%
                \latexpresents@transition@effect%
                \iflatexpresents@transition@debug%
                    \say{\\ `\latexpresents@transition@effect`\\}%
                \fi%
            \else%
                \latexpresents@transition@effect[direction=\latexpresents@transition@angle]%
                \iflatexpresents@transition@debug%
                    \say{\\ `\latexpresents@transition@effect[direction=\latexpresents@transition@angle]`\\}%
                \fi%
            \fi%
        \else%
            \ifx\latexpresents@transition@angle\empty%
                \latexpresents@transition@effect[duration=\latexpresents@transition@time]%
                \iflatexpresents@transition@debug%
                    \say{\\ `\latexpresents@transition@effect[duration=\latexpresents@transition@time]`\\}%
                \fi%
            \else%
                \latexpresents@transition@effect[duration=\latexpresents@transition@time,direction=\latexpresents@transition@angle]%
                \iflatexpresents@transition@debug%
                    \say{\\ `\latexpresents@transition@effect[duration=\latexpresents@transition@time,direction=\latexpresents@transition@angle]`\\}%
                \fi%
            \fi%
        \fi%
    \fi%
}%
% effect
\newcommand*{\latexpresents@transition@effect}{}%
\newcommand*{\settransitioneffect}[1]{\renewcommand*{\latexpresents@transition@effect}{#1}}%
% duration
\newcommand*{\latexpresents@transition@time}{}%
\newcommand*{\settransitiontime}[1]{\renewcommand*{\latexpresents@transition@time}{#1}}%
% direction
\newcommand*{\latexpresents@transition@angle}{}%
\newcommand*{\settransitionangle}[1]{\renewcommand*{\latexpresents@transition@angle}{#1}}%
% automatic advancement (not really slide transition, despite what Beamer says)
\newcommand*{\autoadvance}[1]{%
    \transduration{#1}%
    \say{\\***AUTO (#1s)***\\}%
}%
%%% SLIDE TRANSITIONS %%%

%%% UNDERLINE %%%
%From: https://alexwlchan.net/2017/10/latex-underlines/
\renewcommand{\ULdepth}{1.45pt}
\contourlength{0.7pt}
\renewcommand{\emph}[1]%
{%
    \uline{\phantom{#1}}%
    \llap%
    {%
        \usebeamercolor{background canvas}
        \contour{background canvas.bg}{#1}%
    }%
}
\newcommand*{\copyrighttext}[1]{\usebeamerfont{copyright}\usebeamercolor*{copyright}\textcopyright{}#1 -- THIS DOESN'T WORK?}

%%% MATH-COMPATIBLE COLOURED ALERTS %%%
\newcommand*{\alertBlue}[1]{{\setBlueAlert{}\alert{#1}}}%
\newcommand*{\alertGreen}[1]{{\setGreenAlert{}\alert{#1}}}%
\newcommand*{\alertYellow}[1]{{\setYellowAlert{}\alert{#1}}}%
\newcommand*{\alertOrange}[1]{{\setOrangeAlert{}\alert{#1}}}%
\newcommand*{\alertRed}[1]{{\setRedAlert{}\alert{#1}}}%
\newcommand*{\alertGray}[1]{{\setGrayAlert{}\alert{#1}}}%

\newcommand*{\setBlueAlert}%
{%
    \setbeamercolor{alerted text}{fg=BLUE, bg=}%
}%
\newcommand*{\setGreenAlert}%
{%
    \setbeamercolor{alerted text}{fg=GREEN, bg=}%
}%
\newcommand*{\setYellowAlert}%
{%
    \setbeamercolor{alerted text}{fg=YELLOW, bg=}%
}%
\newcommand*{\setOrangeAlert}%
{%
    \setbeamercolor{alerted text}{fg=ORANGE, bg=}%
}%
\newcommand*{\setRedAlert}%
{%
    \setbeamercolor{alerted text}{fg=RED, bg=}%
}%
\newcommand*{\setGrayAlert}%
{%
    \setbeamercolor{alerted text}{fg=GRAY, bg=}%
}%
%%%%%%%%%%%% END APPERANCE COMMANDS %%%%%%%%%%%%
